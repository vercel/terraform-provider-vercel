name: Tests
on:
  pull_request:
    paths-ignore:
      - "README.md"
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      matrix: ${{ steps.set-matrix.outputs.result }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
        id: go
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: "3.x"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Get dependencies
        run: go mod download
      - name: Build
        run: task build
      - name: Format
        run: task lint
      - uses: actions/github-script@v7
        id: set-matrix
        with:
          script: |
            return {
              m: context.eventName === 'push' ? [
                { os: "ubuntu-latest", terraform: "1.10.*" },
                { os: "ubuntu-latest", terraform: "1.4.*" },
                { os: "windows-latest", terraform: "1.10.*" }
              ] : [
                { os: "ubuntu-latest", terraform: "1.10.*" }
              ]
            };
          result-encoding: json

  docs:
    name: Docs Test
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
        id: go
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: "3.x"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Check if docs are up-to-date
        run: |
          task docs
          git diff
          BADDOCS=$(git status --porcelain)
          test -z "$BADDOCS" || (echo -e "documentation needs regenerating using task docs: $BADDOCS"; exit 1)

  test:
    name: Matrix Test
    needs: [build]
    timeout-minutes: 15
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix: ${{ fromJson(needs.build.outputs.matrix) }}
    runs-on: ${{ matrix.m.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
        id: go
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.m.terraform }}
          terraform_wrapper: false
      - name: Get dependencies
        run: go mod download
      - name: TF acceptance tests
        timeout-minutes: 10
        env:
          TF_ACC: "true"
          VERCEL_API_TOKEN: ${{ secrets.VERCEL_API_TOKEN }}
          VERCEL_TERRAFORM_TESTING_TEAM: "team_GwBFaTRF7juuJfO2jZzzKRgc"
          VERCEL_TERRAFORM_TESTING_GITHUB_REPO: "dglsparsons/test"
          VERCEL_TERRAFORM_TESTING_GITLAB_REPO: "dglsparsons/test"
          VERCEL_TERRAFORM_TESTING_BITBUCKET_REPO: "dglsparsons-test/test"
          VERCEL_TERRAFORM_TESTING_DOMAIN: "dgls.dev"
          VERCEL_TERRAFORM_TESTING_ADDITIONAL_USER_EMAIL: ${{ secrets.VERCEL_TERRAFORM_TESTING_ADDITIONAL_USER_EMAIL }}
          VERCEL_TERRAFORM_TESTING_EXISTING_INTEGRATION: ${{ secrets.VERCEL_TERRAFORM_TESTING_EXISTING_INTEGRATION }}
          VERCEL_TERRAFORM_TESTING_CERTIFICATE: ${{ secrets.VERCEL_TERRAFORM_TESTING_CERTIFICATE }}
          VERCEL_TERRAFORM_TESTING_CERTIFICATE_KEY: ${{ secrets.VERCEL_TERRAFORM_TESTING_CERTIFICATE_KEY }}
        run: |
          go test ./...

  summary:
    name: Summary
    runs-on: ubuntu-latest
    needs:
      - test
      - docs
      - build
    timeout-minutes: 5
    if: ${{ always() }}
    steps:
      - name: Success
        run: |-
            for status in ${{ join(needs.*.result, ' ') }}
            do
              if [ "$status" != "success" ] && [ "$status" != "skipped" ]
              then
                echo "Some checks failed"
                exit 1
              fi
            done
